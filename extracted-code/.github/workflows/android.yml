name: 🤖 Android Build & Test

on:
  push:
    branches: [ main, feat/initial-project-setup, fix/build-critical-errors ]
    paths:
      - 'android/**'
      - 'gradle/**'
      - '*.gradle.kts'
  pull_request:
    branches: [ main, feat/initial-project-setup ]

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-Xmx4g"

jobs:
  # ============================================================================
  # 🏗️ BUILD APK
  # ============================================================================
  build:
    name: 🏗️ Build APK
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: ☕ Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Install the Android SDK and required build components
      - name: 📱 Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          components: platform-tools, platforms;android-34, build-tools;34.0.0


      - name: 🗃️ Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', 'gradle/libs.versions.toml') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 🔐 Grant Execute Permission
        run: chmod +x ./gradlew

      - name: ✅ Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: 🏗️ Build Debug APK
        run: ./gradlew assembleDebug --build-cache

      - name: 🏗️ Build Release APK
        run: ./gradlew assembleRelease --build-cache

      - name: 📱 Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: mr-comic-debug
          path: android/app/build/outputs/apk/debug/*.apk
          retention-days: 7

      - name: 📱 Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: mr-comic-release
          path: android/app/build/outputs/apk/release/*.apk
          retention-days: 30

      - name: 📊 APK Info
        run: |
          echo "# 📱 APK Build Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          DEBUG_APK=$(find android/app/build/outputs/apk/debug -name "*.apk" | head -1)
          RELEASE_APK=$(find android/app/build/outputs/apk/release -name "*.apk" | head -1)
          
          if [ -f "$DEBUG_APK" ]; then
            DEBUG_SIZE=$(ls -lh "$DEBUG_APK" | awk '{print $5}')
            echo "✅ **Debug APK**: $(basename "$DEBUG_APK") ($DEBUG_SIZE)" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -f "$RELEASE_APK" ]; then
            RELEASE_SIZE=$(ls -lh "$RELEASE_APK" | awk '{print $5}')
            echo "✅ **Release APK**: $(basename "$RELEASE_APK") ($RELEASE_SIZE)" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🚀 **Download APKs from Artifacts section below!**" >> $GITHUB_STEP_SUMMARY

  # ============================================================================
  # 🧪 BASIC TESTS
  # ============================================================================
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: ☕ Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Install the Android SDK for running unit tests
      - name: 📱 Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          components: platform-tools, platforms;android-34, build-tools;34.0.0


      - name: 🗃️ Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', 'gradle/libs.versions.toml') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 🔐 Grant Execute Permission
        run: chmod +x ./gradlew

      - name: 🧪 Run Unit Tests
        run: ./gradlew test --continue

      - name: 📊 Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            **/build/test-results/test*/
            **/build/reports/tests/test*/
          retention-days: 7

      - name: 📋 Test Summary
        if: always()
        run: |
          echo "# 🧪 Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if find . -name "TEST-*.xml" -type f | head -1 > /dev/null; then
            echo "✅ Unit tests completed successfully" >> $GITHUB_STEP_SUMMARY
            TEST_COUNT=$(find . -name "TEST-*.xml" -exec grep -l "testcase" {} \; | wc -l)
            echo "📊 **Test files found**: $TEST_COUNT" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ No test results found" >> $GITHUB_STEP_SUMMARY
          fi

  # ============================================================================
  # 🔍 BASIC LINT
  # ============================================================================
  lint:
    name: 🔍 Lint Check
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: ☕ Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Install the Android SDK for lint checks
      - name: 📱 Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          components: platform-tools, platforms;android-34, build-tools;34.0.0

      - name: 🗃️ Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', 'gradle/libs.versions.toml') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 🔐 Grant Execute Permission
        run: chmod +x ./gradlew

      - name: 🔍 Run Android Lint
        run: ./gradlew lint --continue
        continue-on-error: true

      - name: 📊 Upload Lint Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lint-results
          path: |
            **/build/reports/lint-results*.html
            **/build/reports/lint-results*.xml
          retention-days: 7

      - name: 📋 Lint Summary
        if: always()
        run: |
          echo "# 🔍 Lint Analysis" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Android Lint analysis completed" >> $GITHUB_STEP_SUMMARY
          echo "📁 Check artifacts for detailed reports" >> $GITHUB_STEP_SUMMARY

  # ============================================================================
  # ✅ SUCCESS SUMMARY
  # ============================================================================
  success:
    name: ✅ Build Complete
    runs-on: ubuntu-latest
    needs: [build, test, lint]
    if: always()
    steps:
      - name: 🎉 Pipeline Summary
        run: |
          echo "# 🎉 Mr.Comic Build Pipeline Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Task | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| 🏗️ Build APK | ${{ needs.build.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 🧪 Tests | ${{ needs.test.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 🔍 Lint | ${{ needs.lint.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.build.result }}" == "success" ]]; then
            echo "🚀 **APK Files Ready!**" >> $GITHUB_STEP_SUMMARY
            echo "📱 Download from Artifacts section" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Build Failed**" >> $GITHUB_STEP_SUMMARY
            echo "🔍 Check logs for details" >> $GITHUB_STEP_SUMMARY
          fi