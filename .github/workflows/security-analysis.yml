name: 🔒 Security & Dependency Analysis

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run weekly on Sundays at 02:00 UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:

jobs:
  # ============================================================================
  # 🔍 DEPENDENCY VULNERABILITY SCAN
  # ============================================================================
  dependency-scan:
    name: 🔍 Dependency Scan
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: ☕ Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 🗃️ Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', 'gradle/libs.versions.toml') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 🔐 Grant Execute Permission
        run: chmod +x ./gradlew

      - name: 🔍 Gradle Dependency Vulnerability Check
        run: |
          ./gradlew dependencyCheckAnalyze --info --continue
        continue-on-error: true

      - name: 📋 Check for Outdated Dependencies
        run: |
          ./gradlew dependencyUpdates --info
          echo "## 📦 Dependency Status" >> $GITHUB_STEP_SUMMARY
          echo "✅ Dependency vulnerability scan completed" >> $GITHUB_STEP_SUMMARY
        continue-on-error: true

      - name: 📈 Upload Dependency Check Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: dependency-check-reports
          path: |
            **/build/reports/dependency-check-report.html
            **/build/reports/dependencyUpdates/
          retention-days: 30

  # ============================================================================
  # 🛡️ CODEQL SECURITY ANALYSIS
  # ============================================================================
  codeql-analysis:
    name: 🛡️ CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
      actions: read
    strategy:
      fail-fast: false
      matrix:
        language: ['java-kotlin']
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🛡️ Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: +security-and-quality

      - name: ☕ Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 🗃️ Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', 'gradle/libs.versions.toml') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 🔐 Grant Execute Permission
        run: chmod +x ./gradlew

      - name: 🏗️ Build Project for Analysis
        run: |
          ./gradlew assembleDebug --build-cache --no-daemon

      - name: 🛡️ Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"

      - name: 📋 Security Analysis Summary
        run: |
          echo "## 🛡️ Security Analysis Results" >> $GITHUB_STEP_SUMMARY
          echo "✅ CodeQL analysis completed for ${{ matrix.language }}" >> $GITHUB_STEP_SUMMARY
          echo "🔍 Check Security tab for detailed results" >> $GITHUB_STEP_SUMMARY

  # ============================================================================
  # 📊 SECRET SCANNING
  # ============================================================================
  secret-scan:
    name: 📊 Secret Scanning
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔍 Run TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          base: main
          head: HEAD
          path: ./
          extra_args: --debug --only-verified

      - name: 🔍 Check for Hardcoded Secrets
        run: |
          echo "## 🔍 Secret Scanning Results" >> $GITHUB_STEP_SUMMARY
          
          # Check for common secret patterns
          SECRET_PATTERNS=(
            "api[_-]?key"
            "secret[_-]?key"
            "password"
            "token"
            "private[_-]?key"
          )
          
          FOUND_SECRETS=false
          for pattern in "${SECRET_PATTERNS[@]}"; do
            if grep -ri "$pattern" android/ --include="*.kt" --include="*.xml" --include="*.properties" | grep -v "//.*$pattern" | grep -v "#.*$pattern"; then
              FOUND_SECRETS=true
              echo "⚠️ Potential secret found matching pattern: $pattern" >> $GITHUB_STEP_SUMMARY
            fi
          done
          
          if [ "$FOUND_SECRETS" = false ]; then
            echo "✅ No hardcoded secrets detected" >> $GITHUB_STEP_SUMMARY
          fi

  # ============================================================================
  # 🧹 GRADLE WRAPPER VALIDATION
  # ============================================================================
  wrapper-validation:
    name: 🧹 Gradle Wrapper Validation
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: ✅ Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: 📋 Validation Summary
        run: |
          echo "## 🧹 Gradle Wrapper Validation" >> $GITHUB_STEP_SUMMARY
          echo "✅ Gradle wrapper is valid and secure" >> $GITHUB_STEP_SUMMARY

  # ============================================================================
  # 📈 LICENSE COMPLIANCE CHECK
  # ============================================================================
  license-check:
    name: 📈 License Compliance
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: ☕ Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 🗃️ Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', 'gradle/libs.versions.toml') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 🔐 Grant Execute Permission
        run: chmod +x ./gradlew

      - name: 📜 Generate License Report
        run: |
          ./gradlew generateLicenseReport --continue
        continue-on-error: true

      - name: 📋 License Summary
        run: |
          echo "## 📜 License Compliance" >> $GITHUB_STEP_SUMMARY
          echo "✅ License report generated" >> $GITHUB_STEP_SUMMARY
          echo "📁 Check artifacts for detailed license information" >> $GITHUB_STEP_SUMMARY

      - name: 📈 Upload License Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: license-reports
          path: |
            **/build/reports/dependency-license/
          retention-days: 30

  # ============================================================================
  # 🔄 SECURITY SUMMARY
  # ============================================================================
  security-summary:
    name: 🔄 Security Summary
    runs-on: ubuntu-latest
    needs: [dependency-scan, codeql-analysis, secret-scan, wrapper-validation, license-check]
    if: always()
    steps:
      - name: 📊 Generate Security Summary
        run: |
          echo "# 🔒 Security Analysis Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Security Check | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|----------------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| 🔍 Dependency Scan | ${{ needs.dependency-scan.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 🛡️ CodeQL Analysis | ${{ needs.codeql-analysis.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 📊 Secret Scanning | ${{ needs.secret-scan.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 🧹 Wrapper Validation | ${{ needs.wrapper-validation.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 📈 License Check | ${{ needs.license-check.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Overall security status
          if [[ "${{ needs.dependency-scan.result }}" == "success" && 
                "${{ needs.codeql-analysis.result }}" == "success" && 
                "${{ needs.secret-scan.result }}" == "success" && 
                "${{ needs.wrapper-validation.result }}" == "success" ]]; then
            echo "🛡️ **Overall Security Status**: ✅ SECURE" >> $GITHUB_STEP_SUMMARY
          else
            echo "🛡️ **Overall Security Status**: ⚠️ REVIEW REQUIRED" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📁 **Detailed Reports**: Check artifacts and Security tab" >> $GITHUB_STEP_SUMMARY