import React, { useState, useEffect } from 'react';
import ComicCard from '../comics/ComicCard';
import LoadingSpinner from '../common/LoadingSpinner';
import './SearchResults.css';

const SearchResults = ({ 
  results = [], 
  isLoading = false, 
  error = null, 
  query = '', 
  filters = {},
  onLoadMore,
  hasMore = false,
  totalResults = 0,
  onComicSelect 
}) => {
  const [displayedResults, setDisplayedResults] = useState([]);

  useEffect(() => {
    setDisplayedResults(results);
  }, [results]);

  const handleLoadMore = () => {
    if (onLoadMore && hasMore && !isLoading) {
      onLoadMore();
    }
  };

  const handleComicClick = (comic) => {
    if (onComicSelect) {
      onComicSelect(comic);
    }
  };

  const getResultsText = () => {
    if (totalResults === 0) return '–†–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ';
    if (totalResults === 1) return '1 —Ä–µ–∑—É–ª—å—Ç–∞—Ç';
    if (totalResults < 5) return `${totalResults} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞`;
    return `${totalResults} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤`;
  };

  const getActiveFiltersText = () => {
    const activeFilters = [];
    
    if (filters.genres && filters.genres.length > 0) {
      activeFilters.push(`–∂–∞–Ω—Ä—ã: ${filters.genres.join(', ')}`);
    }
    
    if (filters.authors && filters.authors.length > 0) {
      activeFilters.push(`–∞–≤—Ç–æ—Ä—ã: ${filters.authors.join(', ')}`);
    }
    
    if (filters.rating && (filters.rating.min > 0 || filters.rating.max < 10)) {
      activeFilters.push(`—Ä–µ–π—Ç–∏–Ω–≥: ${filters.rating.min}-${filters.rating.max}`);
    }
    
    if (filters.status) {
      const statusText = {
        ongoing: '–ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è',
        completed: '–∑–∞–≤–µ—Ä—à–µ–Ω',
        hiatus: '–ø–∞—É–∑–∞',
        cancelled: '–æ—Ç–º–µ–Ω–µ–Ω'
      };
      activeFilters.push(`—Å—Ç–∞—Ç—É—Å: ${statusText[filters.status] || filters.status}`);
    }
    
    return activeFilters.length > 0 ? ` (${activeFilters.join(', ')})` : '';
  };

  if (isLoading && displayedResults.length === 0) {
    return (
      <div className="search-results-container">
        <LoadingSpinner message="–ü–æ–∏—Å–∫ –∫–æ–º–∏–∫—Å–æ–≤..." />
      </div>
    );
  }

  if (error && displayedResults.length === 0) {
    return (
      <div className="search-results-container">
        <div className="search-error">
          <div className="error-icon">‚ùå</div>
          <h3>–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞</h3>
          <p>{error}</p>
          <button 
            className="retry-button"
            onClick={() => window.location.reload()}
          >
            –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
          </button>
        </div>
      </div>
    );
  }

  if (displayedResults.length === 0 && !isLoading) {
    return (
      <div className="search-results-container">
        <div className="no-results">
          <div className="no-results-icon">üîç</div>
          <h3>–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</h3>
          <p>
            {query 
              ? `–ü–æ –∑–∞–ø—Ä–æ—Å—É "${query}" –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ${getActiveFiltersText()}`
              : '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞'
            }
          </p>
          <div className="search-suggestions">
            <h4>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ:</h4>
            <ul>
              <li>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è</li>
              <li>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ–ª–µ–µ –æ–±—â–∏–µ —Ç–µ—Ä–º–∏–Ω—ã</li>
              <li>–£–±—Ä–∞—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã</li>
              <li>–ü–æ–∏—Å–∫–∞—Ç—å –ø–æ –∞–≤—Ç–æ—Ä—É –∏–ª–∏ –∂–∞–Ω—Ä—É</li>
            </ul>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="search-results-container">
      <div className="search-results-header">
        <div className="results-info">
          <h2 className="results-title">
            {query ? `–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞: "${query}"` : '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞'}
          </h2>
          <p className="results-count">
            {getResultsText()}{getActiveFiltersText()}
          </p>
        </div>
        
        {filters.sortBy && (
          <div className="sort-info">
            <span className="sort-label">–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞:</span>
            <span className="sort-value">
              {filters.sortBy === 'popularity' && '–ü–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏'}
              {filters.sortBy === 'rating' && '–ü–æ —Ä–µ–π—Ç–∏–Ω–≥—É'}
              {filters.sortBy === 'publishDate' && '–ü–æ –¥–∞—Ç–µ'}
              {filters.sortBy === 'title' && '–ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é'}
              {filters.sortOrder === 'desc' ? ' ‚Üì' : ' ‚Üë'}
            </span>
          </div>
        )}
      </div>

      <div className="search-results-grid">
        {displayedResults.map((comic) => (
          <ComicCard
            key={comic.id}
            comic={comic}
            onClick={() => handleComicClick(comic)}
          />
        ))}
      </div>

      {hasMore && (
        <div className="load-more-container">
          <button 
            className="load-more-button"
            onClick={handleLoadMore}
            disabled={isLoading}
          >
            {isLoading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : '–ó–∞–≥—Ä—É–∑–∏—Ç—å –µ—â–µ'}
          </button>
        </div>
      )}

      {error && displayedResults.length > 0 && (
        <div className="error-banner">
          <span>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {error}</span>
          <button onClick={handleLoadMore}>–ü–æ–≤—Ç–æ—Ä–∏—Ç—å</button>
        </div>
      )}

      <div className="results-footer">
        <p className="results-summary">
          –ü–æ–∫–∞–∑–∞–Ω–æ {displayedResults.length} –∏–∑ {totalResults} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        </p>
      </div>
    </div>
  );
};

export default SearchResults;

